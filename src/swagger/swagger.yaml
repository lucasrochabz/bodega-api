openapi: 3.0.0
info:
  title: Bodega API
  description: Esta é a documentação da Bodega API.
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
  # --- Auth ---
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: 'user@example.com'
        password:
          type: string
          example: '123456'
    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Login realizado com sucesso.'
        token:
          type: string
          example: 'jwt-token-here'

  # --- Orders ---
    Order:
      type: object
      properties:
        id:
          type: number
          example: 1
        user_id:
          type: number
          example: 1
        address_id:
          type: number
          example: 1
        created_at:
          type: string
          example: '2024-11-07T17:30:00.000Z'
        status:
          type: string
          example: 'pagamento efetuado'

    OrderProduct:
      type: object
      properties:
        product_id:
          type: number
          example: 1
        quantity:
          type: number
          example: 1

    CreateOrderRequest:
      type: object
      properties:
        status:
          type: string
          example: 'rascunho'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'

    CreateOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedido cadastrado com sucesso.'
        data:
          type: object
          properties:
            id:
              type: number
              example: 1
            userId:
              type: number
              example: 1
            addressId:
              type: number
              example: 1
            status:
              type: string
              example: 'rascunho'
            products:
              type: array
              items:
                $ref: '#/components/schemas/OrderProduct'

    OrdersListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedidos encontrados com sucesso.'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    UserOrdersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedido(s) encontrado(s) com sucesso.'
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              name:
                type: string
                example: 'Produto'
              status:
                type: string
                example: 'rascunho'
              image_path:
                type: string
              created_at:
                type: string
                example: '2025-03-25T17:04:28.000Z'

    OrderDetailsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedido encontrado com sucesso.'
        data:
          type: object
          properties:
            id:
              type: number
              example: 1
            status:
              type: string
              example: 'aguardando pagamento'
            created_at:
              type: string
              example: '2024-11-07T17:30:00.000Z'
            name:
              type: string
              example: 'Produto'
            price:
              type: string
              example: '1500.00'
            image_path:
              type: string
              example: 'produto.jpg'
            address_id:
              type: number
              example: 1
            street:
              type: string
              example: 'Rua Nome do logradouro'
            number:
              type: number
              example: 1
            neighborhood:
              type: string
              example: 'Bairro'
            city:
              type: string
              example: 'Cidade'
            state:
              type: string
              example: 'UF'
            zip_code:
              type: string
              example: '60000000'

    UpdateOrderRequest:
      type: object
      properties:
        status:
          type: string
          example: 'pagamento efetuado'

    UpdateOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedido atualizado com sucesso.'
        data:
          type: object
          properties:
            id:
              type: string
              example: '1'
            status:
              type: string
              example: 'pagamento efetuado'

    DeleteOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Pedido deletado com sucesso.'
        data:
          type: object
          properties:
            id:
              type: string
              example: '1'

paths:
  # --- Auth ---
  /api/auth/login:
    post:
      summary: Executa o login
      description: Retorna o token do usuário
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  # --- Users ---
  /api/users/:
    get:
      summary: Retorna uma lista de usuários
      description: |
        Retorna uma lista com os dados dos usuários cadastrados no sistema.

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuários encontrados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuários encontrados com sucesso.'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        first_name:
                          type: string
                          example: 'User'
                        last_name:
                          type: string
                          example: 'Teste'
                        email:
                          type: string
                          example: 'user@example.com'
                        status:
                          type: string
                          example: 'ativo'

    post:
      summary: Cadastra um usuário
      description: Retorna os dados do usuário cadastrado no sistema
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: 'User'
                last_name:
                  type: string
                  example: 'Example'
                email:
                  type: string
                  example: 'user@example.com'
                password:
                  type: string
                  example: '123456'
                zip_code:
                  type: number
                  example: '60710000'
                street:
                  type: string
                  example: 'Avenida Godofredo Maciel'
                number:
                  type: number
                  example: 123
                neighborhood:
                  type: string
                  example: 'Parangaba'
                city:
                  type: string
                  example: 'Fortaleza'
                state:
                  type: string
                  example: 'CE'
      responses:
        '201':
          description: Usuário cadastrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário cadastrado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: 'Nome'
                      last_name:
                        type: string
                        example: 'Sobrenome'
                      email:
                        type: string
                        example: 'nome@email.com'
                      password:
                        type: string
                        example: 'bcrypthash'
                      zip_code:
                        type: number
                        example: 60710000
                      street:
                        type: string
                        example: 'Avenida Godofredo Maciel'
                      number:
                        type: number
                        example: 123
                      neighborhood:
                        type: string
                        example: 'Parangaba'
                      city:
                        type: string
                        example: 'Fortaleza'
                      state:
                        type: string
                        example: 'CE'

  /api/users/user:
    get:
      summary: Retorna uma lista de dados do usuário
      description: |
        Retorna uma lista de dados do usuário no sistema.

        Requer autenticação via token JWT.
        
        **Apenas usuários autenticados podem acessar este endpoint.**
      tags:
        - Users
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Usuário encontrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário encontrado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: 'User'
                      last_name:
                        type: string
                        example: 'Teste'
                      email:
                        type: string
                        example: 'user@example.com'
                      street:
                        type: string
                        example: 'Rua Nome do logradouro'
                      number:
                        type: number
                        example: 123
                      neighborhood:
                        type: string
                        example: 'Bairro'
                      city:
                        type: string
                        example: 'Cidade'
                      state:
                        type: string
                        example: 'UF'
                      zip_code:
                        type: string
                        example: '60000000'

  /api/users/update:
    put:
      summary: Atualiza o usuário
      description: |
        Retorna os dados do usuário atualizado no sistema.

        Requer autenticação via token JWT.
        
        **Apenas usuários autenticados podem acessar este endpoint.**
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: 'Novo Nome'
                last_name:
                  type: string
                  example: 'Novo Sobrenome'
                email:
                  type: string
                  example: 'novonome@email.com'
                password:
                  type: string
                  example: '123456'
                zip_code:
                  type: number
                  example: '60710000'
                street:
                  type: string
                  example: 'Avenida Godofredo Maciel'
                number:
                  type: number
                  example: 456
                neighborhood:
                  type: string
                  example: 'Parangaba'
                city:
                  type: string
                  example: 'Fortaleza'
                state:
                  type: string
                  example: 'CE'
      responses:
        '201':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário atualizado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1

  /api/users/{userId}:
    delete:
      summary: Deleta o usuário
      description: |
        Retorna o dado do usuário deletado do sistema.

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      responses:
        '200':
          description: Usuário deletado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário deletado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'

  #  --- Products ---
  /api/products:
    get:
      summary: Retorna uma lista de produtos
      description: Retorna uma lista de todos os produtos disponíveis no sistema
      tags:
        - Products
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
            description: Número da página atual
        - in: query
          name: pageSize
          required: true
          schema:
            type: string
            default: 4
      responses:
        '200':
          description: Produtos encontrados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produtos encontrados com sucesso.'
                  data:
                    type: object
                    properties:
                      totalPages:
                        type: number
                        example: 2
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 1
                            name:
                              type: string
                              example: 'Produto'
                            price:
                              type: string
                              example: '1500.00'
                            description:
                              type: string
                              example: 'Descrição do produto'
                            image_path:
                              type: string
                              example: 'produto.jpg'

    post:
      summary: Cadastra um produto
      description: |
        Retorna os dados do produto cadastrado no sistema.

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Nome do produto'
                price:
                  type: number
                  example: 1234.56
                description:
                  type: string
                  example: 'Descrição do produto...'
                stock:
                  type: number
                  example: 10
                status:
                  type: string
                  example: 'ativo'
                image_path:
                  type: string
                  example: 'default_image.png'
      responses:
        '201':
          description: Produto cadastrado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produto cadastrado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: 'Nome do produto cadastrado'
                      price:
                        type: number
                        example:  1234.56
                      description:
                        type: string
                        example: 'Descrição do produto cadastrado...'
                      stock:
                        type: number
                        example: 10
                      status:
                        type: string
                        example: 'ativo'
                      image_path:
                        type: string
                        example: 'default_image.png'

  /api/products/{productId}:
    parameters:
      - name: productId
        in: path
        required: true
        description: ID do produto
        schema:
          type: integer

    get:
      summary: Retorna um produto
      description: Retorna os dados do produto selecionado no sistema
      tags:
        - Products
      responses:
        '200':
          description: Produto encontrado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produto encontrado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      name:
                        type: string
                        example: 'Produto'
                      price:
                        type: string
                        example: '1500.00'
                      description:
                        type: string
                        example: 'Descrição do produto'
                      stock:
                        type: number
                        example: 10
                      status:
                        type: string
                        example: 'ativo'
                      image_path:
                        type: string
                        example: 'produto.jpg'

    put:
      summary: Retorna o produto atualizado
      description: |
        Retorna os dados do produto atualizado no sistema

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: 'Descrição do produto atualizada...'
      responses:
        '200':
          description: Produto atualizado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produto atualizado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      description:
                        type: string
                        example: 'Descrição do produto atualizada...'

    delete:
      summary: Deleta um produto
      description: |
        Retorna o dado do produto deletado do sistema.

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      responses:
        '200':
          description: Produto deletado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produto deletado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'

  # --- Orders ---
  /api/orders:
    get:
      summary: Retorna uma lista de todos os pedidos
      description: |
        Retorna uma lista com os dados dos pedidos no sistema

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pedidos encontrados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'

    post:
      summary: Cadastra um pedido
      description: |
        Retorna os dados do pedido cadastrado no sistema.

        Requer autenticação via token JWT.
        
        **Apenas usuários autenticados podem acessar este endpoint.**
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Pedido cadastrado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'

  /api/orders/user:
    get:
      summary: Retorna uma lista de todos os pedidos do usuário
      description: |
        Retorna uma lista com os dados de todos os pedidos do usuário no sistema.

        Requer autenticação via token JWT.
        
        **Apenas usuários autenticados podem acessar este endpoint.**
      tags:
        - Orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pedidos do usuário encontrado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrdersResponse'

  /api/orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        description: ID do pedido
        schema:
          type: integer

    get:
      summary: Retorna os detalhes do pedido
      description: Retorna os dados dos detalhes do pedido no sistema
      tags:
        - Orders
      responses:
        '200':
          description: Pedido encontrado com success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'

    put:
      summary: Atualiza um pedido
      description: Retorna os dados do pedido atualizado no sistema
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        '200':
          description: Pedido atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'

    delete:
      summary: Deleta um pedido
      description: |
        Retorna o dado do pedido deletado do sistema.

        Requer autenticação via token JWT.

        **Apenas administradores têm permissão para acessar este endpoint.**
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID do pedido
          schema:
            type: integer
      responses:
        '200':
          description: Pedido deletado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOrderResponse'
