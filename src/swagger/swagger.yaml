openapi: 3.0.0
info:
  title: Bodega API
  description: Esta é a documentação da Bodega API.
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerformat: JWT
      in: header

paths:
  # --- Auth ---
  /api/auth/login:
    post:
      summary: Executa o login
      description: Retorna o token do usuário
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'user@example.com'
                password:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: Usuários encontrados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Login realizado com sucesso.'
                  token:
                    type: string
                    example: 'jwt-token-here'

  # --- Users ---
  /api/users/:
    get:
      summary: Retorna uma lista de usuários
      description: Retorna uma lista com os dados dos usuários cadastrados no sistema
      tags:
        - Users
      responses:
        '200':
          description: Usuários encontrados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuários encontrados com sucesso.'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        first_name:
                          type: string
                          example: 'User'
                        last_name:
                          type: string
                          example: 'Teste'
                        email:
                          type: string
                          example: 'user@example.com'
                        password:
                          type: string
                          example: 'passwordhash'
                        status:
                          type: string
                          example: 'ativo'

    post:
      summary: Cadastra um usuário
      description: Retorna os dados do usuário cadastrado no sistema
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: 'teste'
                last_name:
                  type: string
                  example: 'teste'
                email:
                  type: string
                  example: 'teste'
                password:
                  type: string
                  example: 'teste'
      responses:
        '200':
          description: Usuário cadastrado com sucesso
          content:
            application/json:
              schema:
                type: object

  /api/users/user:
    get:
      summary: Retorna uma lista de dados do usuário
      description:  Retorna uma lista de dados do usuário no sistema
      tags:
        - Users
      security:
       - bearerAuth: []
      responses:
        '200':
          description: Usuário encontrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Usuário encontrado com sucesso.'
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      first_name:
                        type: string
                        example: 'User'
                      last_name:
                        type: string
                        example: 'Teste'
                      email:
                        type: string
                        example: 'user@example.com'
                      street:
                        type: string
                        example: 'Rua Nome do logradouro'
                      number:
                        type: number
                        example: 123
                      neighborhood:
                        type: string
                        example: 'Bairro'
                      city:
                        type: string
                        example: 'Cidade'
                      state:
                        type: string
                        example: 'UF'
                      zip_code:
                        type: string
                        example: '60000000'

  /api/users/update:
    put:
      summary: Atualiza o usuário
      description: Retorna os dados do usuário atualizado no sistema
      tags:
        - Users
      responses:
        '200':
          description: 'Usuário atualizado com sucesso.'
          content:
            application/json: {}

  #  --- Products ---
  /api/products:
    get:
      summary: Retorna uma lista de produtos
      description: Retorna uma lista de todos os produtos disponíveis no sistema
      tags:
        - Products
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: string
            description: Número da página atual
        - in: query
          name: pageSize
          required: true
          schema:
            type: string
            default: 4
      responses:
        '200':
          description: Produtos encontrados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Produtos encontrados com sucesso.'
                  data:
                    type: object
                    properties:
                      totalPages:
                        type: number
                      results:
                        type: array
                        items:
                          type: object

    post:
      summary: Cadastra um produto
      description: Retorna os dados do produto cadastrado no sistema
      tags:
        - Products
      responses:

  /api/products/{productId}:
    get:
      summary: Retorna um produto
      description: Retorna os dados do produto selecionado no sistema
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          description: ID do produto
          schema:
            type: integer
      responses:
        '200':
          description: Produto encontrado com sucesso.
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object

    put:
      summary: Retorna o produto atualizado
      description: Retorna os dados do produto atualizado no sistema
      tags:
        - Products
      responses:
        '200':
          description: 'Produto atualizado com sucesso.'
          content:
            application/json: {}

  # --- Orders ---
  /api/orders:
    get:
      summary: Retorna uma lista de todos os pedidos
      description: Retorna uma lista com os dados dos pedidos no sistema
      tags:
        - Orders
      responses:
        '200':
          description: Pedidos encontrados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Pedidos encontrados com sucesso.'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        user_id:
                          type: number
                          example: 1
                        address_id:
                          type: number
                          example: 1
                        created_at:
                          type: string
                          example: '2024-11-07T17:30:00.000Z'
                        status:
                          type: string
                          example: 'pagamento efetuado'

    post:
      summary: Cadastra um pedido
      description: Retorna os dados do pedido cadastrado no sistema
      tags:
        - Orders
      responses:

  /api/orders/user:
    get:
      summary: Retorna uma lista de todos os pedidos do usuário
      description: Retorna uma lista com os dados de todos os pedidos do usuário no sistema
      tags:
        - Orders
      responses:

  /details/{orderId}:
    get:
      summary: Retorna os detalhes do pedido
      description: Retorna os dados dos detalhes do pedido no sistema
      tags:
        - Orders
      responses:

  /api/orders/{orderId}:
    put:
      summary: Atualiza um pedido
      description: Retorna os dados do pedido atualizado no sistema
      tags:
        - Orders
      responses:
